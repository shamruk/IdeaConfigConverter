//allprojects {
//	group = '${groupId}'
//	version = '${version}'
//	//${artifactId}
//}

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots"
        }
//${plugin_repositories}
    }
    dependencies {
        classpath group: 'org.gradlefx', name: 'gradlefx', version: '${gradlefx.version}'
    }
}

subprojects {

    apply plugin: 'gradlefx'

    version = '${version}'

    def os = System.getProperty("os.name").toLowerCase()
    def flexSDKExt = os.contains("windows") ? 'zip' : 'tar.gz'
    def airSDKExt = os.contains("windows") ? 'zip' : 'tbz2'
    def airSDKOS = os.contains("windows") ? 'win' : 'mac'
// to use wine on linux:	def airSDKExt = os.contains("mac os") ? 'tbz2' : 'zip'
// to use wine on linux:	def airSDKOS = os.contains("mac os") ? 'mac' : 'win'

    if (os.contains("mac os") && "${air.sdk.version}".split("\\.").getAt(0).toInteger() >= 24) {
        airSDKExt = "dmg"
    }

    repositories {
		ivy {
			name 'Apache'
			artifactPattern 'http://apache.cu.be/flex/[revision]/binaries/[module]-[revision]-bin.[ext]'
		}
		ivy {
			name 'Adobe Air SDK'
			artifactPattern 'http://download.macromedia.com/air/' + airSDKOS + '/download/[revision]/[module].[ext]'
		}
//${repositories}
	}

    playerVersion = "${player.version}"
    dependencies {
        flexSDK group: 'org.apache', name: 'apache-flex-sdk', version: "${flex.sdk.version}", ext: flexSDKExt
        airSDK group: 'com.adobe', name: 'AdobeAIRSDK', version: "${air.sdk.version}", ext: airSDKExt
    }

//	publishDir = 'publishDirectory'

	additionalCompilerOptions += [
		"-debug=false",
		"-optimize=true",
		"-target-player=$playerVersion",
		"-compiler.headless-server=true",
		"-compiler.fonts.managers=flash.fonts.JREFontManager,flash.fonts.BatikFontManager,flash.fonts.AFEFontManager,flash.fonts.CFFFontManager",
		"-swf-version=${player.swfversion}",
		"-keep-as3-metadata+=DefaultProperty,Inject,Dispatcher,EventHandler,ViewAdded,ViewRemoved,ViewNavigator,PostConstruct,PreDestroy"
	]

	switch ("$platform") {
	//${platform_options}
	}

	jvmArguments = [
            '-Xmx1024m',
            '-Xms512m'
    ]

    sdkAutoInstall {
        showPrompts = false
    }
}
